[paths]
model_dir = "models"

[network]
decoder_n_hidden_layers = 4
decoder_hidden_dim = 128
nl = "sine"                 # 'sine' | 'relu' | 'softplus'
sphere_init_params = [1.6, 0.1]
init_type = "mfgi"    # 'siren' | 'geometric_sine' | 'geometric_relu' | 'mfgi'
neuron_type = "quadratic"          # 'linear' | 'quadratic'

[loss]
loss_type = 'siren_wo_n_w_div' # 'siren_wo_n_w_div' | 'siren_wo_n' | 'siren_w_div' | 'siren'
loss_weights = [3e3, 1e2, 1e2, 0.868, 1e2, 0.0, 0.0] # sdf, inter, normal, eikonal, div, latent, heat
div_type = "dir_l1" # 'dir_l1' | 'dir_l2' | 'full_l1' | 'full_l2'
div_decay = "linear" # 'linear' | 'quintic' | 'step'
div_decay_params = [1e2, 0.2, 1e2, 0.4, 0.0, 0.0]

[sampling]
grid_res = 256
nonmnfld_sample_type = "grid" # We are using importance sampling so the coefficient changes
n_random_samples = 4096
n_points = 15000
grid_range = 1.2
nonmnfld_sample_std = 1.0

[training]
train = true
eval = true
task = "2d"
n_iterations = 10000
gpu_idx = 0
lr = 5e-5
grad_clip_norm = 10.0
heat_lambda = 60.0
vis_interval = 50
log_interval = 50

[visualization]
vis_grid_res = 256
vis_grid_range = 1.2
vis_contour_interval = 0.025
vis_normals = true
n_vis_normals = 100
save_video = true
compute_losses_on_vis_grid = false
video_fps = 6
